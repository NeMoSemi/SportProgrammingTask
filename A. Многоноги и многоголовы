# На далёкой-далёкой планете по полю гуляют многоноги и многоголовы. У каждого из многоногов ровно 1
#  голова и 19
#  ног. У каждого из многоголовов ровно 7
#  голов и 4
#  ноги.
#
# Космозоологи Шапкин и Башмаков решили пересчитать животных. Шапкин насчитал A
#  голов, а Башмаков — B
#  ног. Помогите им узнать, сколько животных гуляло по полю?
#
# Входные данные
# В единственной строке задаются два натуральных числа A
#  (1≤A≤108
# ) — количество голов и B
#  (1≤B≤108
# ) — количество ног.
#
# Выходные данные
# Выведите через пробел два целых числа: количество многоногов и многоголовов. Если ответов может быть несколько, выведите любой из них.
#
# Если космозоологи ошиблись в расчётах, выведите -1.
#
# Примеры
# Входные данныеСкопировать
# 23
# 50
# Выходные данныеСкопировать
# 2 3
# Входные данныеСкопировать
# 2
# 19
# Выходные данныеСкопировать
# -1
# Примечание
# В первом примере из условия суммарно 23 головы и 50 ног. Такое возможно только если на планете ровно 2 многонога и 3 многоголова.
#
# Количество голов у них будет 1×2+7×3=23
# , а количество ног будет равно 19×2+3×4=50
# .
#
# Во втором примере из условия учёные наблюдают 2 головы и 19 ног. Но так как у многоголова ровно 7 голов, это означает, что на планете нет многоголовов (иначе голов было бы хотя бы 7). А значит, многоногов на планете ровно 2 (по числу голов). Но в таком случае суммарно на пленете было бы ровно 2×19=38
#  ног. А это не так.
#
# Значит, космозоологи ошиблись со своими подсчётами.
#
#
n = int(input())
eat = [0] * (2 * 10 ** 5)
not_eat = []
not_count = 0
sum_ = 0
for _ in range(n):
    t, k = map(int, input().split())
    if eat[t - 1] == 0:
        eat[t - 1] = k
        sum_ += k
    else:
        if eat[t - 1] < k:
            sum_ += abs(eat[t - 1] - k)
            not_eat.append([t - 1, eat[t - 1]])
            eat[t - 1] = k
        else:
            not_eat.append([t - 1, k])
        not_count += 1

not_eat = sorted(not_eat, key=lambda x: x[0])
j = 0
for i in range(2 * 10 ** 5):
    if not_count + 1 == j:
        break
    if eat[i] == 0 and not_eat[j][0] <= i:
        sum_ += not_eat[j][1]
print(sum_)
