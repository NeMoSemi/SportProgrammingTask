#
#
# E. Сборная Юпитера
# ограничение по времени на тест2 секунды
# ограничение по памяти на тест256 мегабайт
# Каждый год в одном из уголков нашей вселенной проходят Интеллектуальные Олимпийские Игры. В этом году честь проводить это масштабное мероприятие выпала планете Юпитер. Вам предстоит отобрать две команды на Игры из имеющихся n кандидатов в сборную.
#
# Все кандидаты являются школьниками, каждый кандидат учится в определенном классе. Как и на Земле, на Юпитере 11 классов, пронумерованных от 1 до 11. На Игры отбирается две команды по результатам отборочных соревнований. На соревнованиях проводится пять отборочных туров. По итогам каждого тура каждый школьник может набрать от 0 до 300 баллов, чем больше, тем лучше.
#
# В первую команду попадают четыре лучших школьника по сумме баллов, набранных на всех отборочных турах. Во вторую команду попадают четверо лучших по сумме баллов из тех, кто не попал в первую команду, и при этом не учится в 11 классе.
#
# Все туры уже проведены, и получилось так, что любые два кандидата набрали в сумме различное количество баллов. Осталось лишь написать программу, которая по имеющимся данным о кандидатах и результатах туров определит тех восьмерых, которые защитят честь Юпитера на Интеллектуальных Олимпийских Играх и докажут, что Юпитер — суперпланета!
#
# Входные данные
# Первая строка входных данных содержит единственное число n — количество кандидатов в сборную Юпитера (8 ≤ n ≤ 500).
#
# Следующие n строк содержат информацию о кандидатах. Каждая строка содержит 6 целых чисел — номер класса, в котором учится очередной кандидат, и его результаты на отборочных турах.
#
# Номер класса является числом от 1 до 11, а результат на каждом туре — числом от 0 до 300.
#
# Гарантируется, что все участники имеют различные суммарные баллы.
#
# Гарантируется, что есть хотя бы 8 кандидатов, обучающихся не в 11 классе.
#
# Выходные данные
# Выведите две строки.
#
# Первая строка должна содержать четыре целых числа, разделенных пробелами — номера кандидатов, которые попадут в первую команду Юпитера. Кандидаты нумеруются с единицы в порядке их появления во вводе. Выводить номера следует в порядке возрастания.
#
# Вторая строка должна описывать вторую команду Юпитера в аналогичном формате.
#
# Пример
# Входные данныеСкопировать
# 10
# 9 50 271 287 282 42
# 10 230 241 137 14 240
# 10 276 109 300 197 300
# 8 205 292 194 232 74
# 10 294 291 299 300 255
# 9 195 275 265 134 9
# 11 204 259 96 263 83
# 7 141 223 85 84 26
# 11 286 294 289 221 261
# 10 277 52 117 272 262
# Выходные данныеСкопировать
# 3 4 5 9
# 1 2 6 10

n = int(input())
s = []
for i in range(1, n + 1):
    a = [int(i) for i in input().split()]
    cur = [sum(a) - a[0], a[0], i]
    s.append(cur)

s = sorted(s, key=lambda x: x[0], reverse=True)
otv1 = sorted([s[i][2] for i in range(4)])
s = [x for x in s[4:] if x[1] != 11]
otv2 = sorted([s[i][2] for i in range(4)])

print(*otv1)
print(*otv2)